#!/usr/bin/perl -w

use strict;
use lib "lib";
use Data::Dump;
use Data::Dump::Filtered qw(add_dump_filter);
use LWP;

add_dump_filter(sub {
    my($ctx, $object) = @_;
    print $ctx->container_class, " ", $ctx->container_self, "\n" if $ctx->container_class;
    if ($ctx->is_scalar && $$object && $$object =~ /^\d+$/) {
	return { object => $$object * 2, comment => "\n Used to be $$object" };
    }
    if ($ctx->is_scalar && $$object) {
	return { dump => "..." };
    }
    if (!$ctx->class && $ctx->reftype eq "SCALAR" && defined($$object) && length($$object) > 20) {
	return { object => substr($$object, 0, 10) . "..." . substr($$object, -5) }
    }
    if ($ctx->object_isa("LWP::UserAgent")) {
	return { bless => "", comment => "LWP::UserAgent" }
    }
    if ($ctx->object_isa("URI")) {
	return { object => "<$object>", comment => "Actually a URI subclass" };
    }
    if ($ctx->object_isa("HTTP::Message")) {
	return { hide_keys => [qw(_request)] };
    }
    return;
});



my $ua = LWP::UserAgent->new;
my $res = $ua->get("http://www.example.com");

dd $ua;
dd $res;
